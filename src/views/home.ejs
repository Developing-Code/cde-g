<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.css">

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<%- include('./partials/nav.ejs') %>

  <style>
    *{
     
      font-family: 'Poppins', sans-serif;

    }
    .scrollable-content {
      width: 100%;
      /* Tamaño fijo del div, puedes ajustarlo según tus necesidades */
      height: 235px;
      /* Tamaño fijo del div, puedes ajustarlo según tus necesidades */
      overflow: auto;
      /* Agrega una barra de desplazamiento cuando el contenido exceda el tamaño del div */
    }

    .border-left-primary {
      border-left: 5px solid #1EA4E9;
      /* Cambia "red" al color que desees */
    }

    .border-left-warning {
      border-left: 3px solid #E76E09;
      /* Cambia "red" al color que desees */
    }

    .border-left-danger {
      border-left: 3px solid #e91e1e;
      /* Cambia "red" al color que desees */
    }

    .border-left-success {
      border-left: 3px solid #36e91e;
      /* Cambia "red" al color que desees */
    }
  </style>

  <body>

    
    <style>
      .section1-home{
        display: flex;
        justify-content: space-between;
        align-items: top;
        width: 100%;
        padding: 4rem 2rem;
        margin-top: 50px;
      }
      .mapa-container{
        flex: 3;
      }
      .resumen-composteras{
        display: flex;
        flex-direction: column;
        padding: 1rem;
        gap: 1rem;
        flex: 1;
      }

      .card-resumen{
        padding: 1rem;
        display: flex;
        flex-direction: column;
        border-left: 3px solid #E76E09;
        transition: all 0.4s ease-in;
        color: #6e6e6e;
      }
      .card-resumen:hover{
        transition: all 0.4s ease-in-out;
        transform: translateX(10px);
        color: #222222;
      }

      .graficos-section2{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
       
        width: 100%;
        height: 800px;
      }

      .estadisticas-total-container{
        height: 400px;
        width: 100%;
        padding: 2rem;
        width: 70%;
      }

      .graficos-linea{
        height: 400px;
        width: 100%;
        padding: 2rem;
        display: flex;
        flex-direction: column;
        width: 30%;
      }
    </style>
  <div class="section1-home">

    <!-- aqui va el mapa -->
    <div class="mapa-container">
      <h2>Mapa de composteras</h2>
      <br>
      <div id="map" style="width: 100%; height: 500px;"></div>
    </div>

    <!-- aqui las targetas -->
    <div class="resumen-composteras">
      <h2>Resumen rapido</h2>
      
      <!-- card de resument -->
      <div class="card-resumen">
        <h5 class="card-title">Entregadas</h5>
        <h4 class="card-text"><%= cntComposteras[0].total_composteras %></h4>
      </div>
      <!-- card de resument -->
      <div class="card-resumen">
        <h5 class="card-title">Operando</h5>
        <h4 class="card-text"><%= cntComposEnoperacion[0].composteras_en_operacion %></h4>
      </div>
      <!-- card de resument -->
      <div class="card-resumen">
        <h5 class="card-title">Biomasa cargada</h5>
        <h4 class="card-text"><%= BiomasaCargada[0].sumaTotal %> kg</h4>
      </div>
      <!-- card de resument -->
      <div class="card-resumen">
        <h5 class="card-title">Compost descargado</h5>
        <h4 class="card-text"><%= compostDescargado[0].sumaTotal %> kg</h4>
      </div>


    </div>
  </div>

    <% if (role=='user1' || role=='admin' || role=='supervisor' ) {%>
      <div class="" style="margin-top: 150px;">
        <div class=""
          style="display: flex; flex-direction: column; justify-content: center; align-items: center; flex-wrap: wrap; ">
          <% if ( role=='admin' || role=='supervisor' ) {%>




          <div class="graficos-section2">
       
            <div class="estadisticas-total-container">
              <h3>Estadisticas totales</h3>
              <canvas id="barChart"></canvas>
              <canvas id="barChart1"></canvas>
              
            </div>

            <div class="graficos-linea">
              <canvas id="barChart2"></canvas>

              <canvas id="barChart3"></canvas>
            </div>
          </div>


          <div style="height: 800px; display: flex; flex-direction: column; width: 100%;" >

            <canvas id="pieChart1"></canvas>
            
            <canvas id="pieChart2"></canvas>
            
            
            <canvas id="barChart1"></canvas>
          </div>

      
      <% } %>



        <% if ( role=='admin' || role=='supervisor' ) {%>
          <div class="row  text-center">


            <% if ( role=='admin' ) {%>


             

              <% } %>
          </div>
          <% } %>
            
                </div>

                </div>







                <% } %>

                <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
                <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

                <script src="/socket.io/socket.io.js"></script>
                <script src="/toastr/toastr.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

                <script>
                  var selectedMarker = null;
                  var selectedMarkerCoords = null;

                  // Crear un mapa y establecer su vista inicial
                  const map = L.map('map').setView([6.253350, -75.426938], 13);

                  // Agregar una capa base de OpenStreetMap
                  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                  }).addTo(map);

                  let markerIcon = null

                    <% coordenadas.forEach((place) => { %>

                      markerIcon = L.icon({
                        iconUrl: 'img/marcador2.png', iconSize: [32, 32], iconAnchor: [16, 32], popupAnchor: [0, -32]
                      });

                      var marker = L.marker([<%= place.lat %>, <%= place.log %>], { icon: markerIcon, title: '<%= place.numeroCasa %>', dataId: '<%= place.id %>' }).addTo(map);

                      marker.bindPopup('<h4><%= place.nombre_institucion %>.</h4><p><%= place.nombre_responsable %>.</p><p><%= place.celular_responsable %>.</p><a href="/perfilCompost/<%= place.id %>">Ver más</a>')
                      marker.on('click', function (e) {
                        // Guardar las coordenadas del marcador seleccionado
                        selectedMarker = e;
                        selectedMarkerCoords = e.latlng;
                        map.setView(e.latlng, 17);
                      })
                        <% }); %>// Tu código JavaScript para crear el mapa va aquí
                </script>

                <script>
        // Obtén los datos del servidor (reemplaza 'datos' con tus datos reales)
        if ('<%- chartData %>') {
                    const datos = JSON.parse('<%- chartData %>');

                    const meses = datos.map(dato => 'Mes ' + dato.mes);
                    const data1 = datos.map(dato => dato.total_kilos);

                    // Obtén una referencia al elemento canvas
                    const canvas = document.getElementById('barChart');

                    // Configura el gráfico utilizando los datos
                    const ctx = canvas.getContext('2d');
                    const chart = new Chart(ctx, {
                      type: 'bar', // Tipo de gráfico (puedes cambiarlo según tus necesidades)
                      data: {
                        labels: meses, // Etiquetas para el eje X (vendedores)
                        datasets: [{
                          label: 'Cantidad Biomasa cargada por mes (kg)',
                          data: data1, // Datos para el eje Y (cantidad de clientes)
                          backgroundColor: 'rgba(250, 129, 16, 0.2)', // Color de fondo de las barras
                          borderColor: 'rgba(250, 129, 16, 1)', // Color del borde de las barras
                          borderWidth: 2 // Ancho del borde de las barras
                        }]
                      },
                      options: {
                        responsive: true,

                        maintainAspectRatio: false,
                        scales: {
                          y: {
                            beginAtZero: true // Comienza el eje Y en cero
                          }
                        }
                      }
                    });
                  }

                </script>
                <script>
                  // Obtén los datos del servidor (reemplaza 'datos' con tus datos reales)
                  if ('<%- ctnporlocalidad %>') {

                    function getRandomColors(numColors) {
                      const colors = [];
                      for (let i = 0; i < numColors; i++) {
                        const r = Math.floor(Math.random() * 256);
                        const g = Math.floor(Math.random() * 256);
                        const b = Math.floor(Math.random() * 256);
                        const a = 0.8;
                        colors.push(`rgba(${r}, ${g}, ${b}, ${a}`);
                      }
                      return colors;
                    }
                    const datos = JSON.parse('<%- ctnporlocalidad %>');

                    const localidades = datos.map(dato => dato.localidad_compostera);
                    const data1 = datos.map(dato => dato.cantidad_de_registros);
                    const numCategories = datos.length;
                    const randomColors = getRandomColors(numCategories);
                    console.log(numCategories)
                    // Obtén una referencia al elemento canvas
                    const canvas = document.getElementById('pieChart1');

                    // Configura el gráfico utilizando los datos
                    const ctx = canvas.getContext('2d');
                    const chart = new Chart(ctx, {
                      type: 'doughnut', // Tipo de gráfico (puedes cambiarlo según tus necesidades)
                      data: {
                        labels: localidades, // Etiquetas para el eje X (vendedores)
                        datasets: [{
                          data: data1, // Datos para el eje Y (cantidad de clientes)
                          backgroundColor: randomColors, // Color de fondo de las barras
                          borderColor: 'rgba(250, 129, 16, 1)', // Color del borde de las barras
                          borderWidth: 2 // Ancho del borde de las barras
                        }]
                      },
                      options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                          y: {
                            beginAtZero: true // Comienza el eje Y en cero
                          }
                        }
                      }
                    });
                  }

                </script>
                <script>
                  // Obtén los datos del servidor (reemplaza 'datos' con tus datos reales)
                  if ('<%- chartData %>') {
                    const datos = JSON.parse('<%- chartData %>');

                    const meses = datos.map(dato => 'Mes ' + dato.mes);
                    const data1 = datos.map(dato => dato.total_kilos);

                    // Obtén una referencia al elemento canvas
                    const canvas = document.getElementById('pieChart2');

                    // Configura el gráfico utilizando los datos
                    const ctx = canvas.getContext('2d');
                    const chart = new Chart(ctx, {
                      type: 'doughnut', // Tipo de gráfico (puedes cambiarlo según tus necesidades)
                      data: {
                        labels: meses, // Etiquetas para el eje X (vendedores)
                        datasets: [{
                          label: 'Cantidad Biomasa cargada por mes (kg)',
                          data: data1, // Datos para el eje Y (cantidad de clientes)
                          backgroundColor: 'rgba(250, 129, 16, 0.2)', // Color de fondo de las barras
                          borderColor: 'rgba(250, 129, 16, 1)', // Color del borde de las barras
                          borderWidth: 2 // Ancho del borde de las barras
                        }]
                      },
                      options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                          y: {
                            beginAtZero: true // Comienza el eje Y en cero
                          }
                        }
                      }
                    });
                  }

                </script>
                <script>
                  // Obtén los datos del servidor (reemplaza 'datos' con tus datos reales)
                  if ('<%- chartData1 %>') {
                    const datos1 = JSON.parse('<%- chartData1 %>');

                    const meses = datos1.map(dato => 'Mes ' + dato.mes);
                    const data1 = datos1.map(dato => dato.total_kilos);

                    // Obtén una referencia al elemento canvas
                    const canvas = document.getElementById('barChart1');

                    // Configura el gráfico utilizando los datos
                    const ctx1 = canvas.getContext('2d');
                    const chart = new Chart(ctx1, {
                      type: 'bar', // Tipo de gráfico (puedes cambiarlo según tus necesidades)
                      data: {
                        labels: meses, // Etiquetas para el eje X (vendedores)
                        datasets: [{
                          label: 'Cantidad Compost descargado por mes (kg)',
                          data: data1, // Datos para el eje Y (cantidad de clientes)
                          backgroundColor: 'rgba(44, 191, 174, 0.2)', // Color de fondo de las barras
                          borderColor: 'rgba(44, 191, 174, 1)', // Color del borde de las barras
                          borderWidth: 2 // Ancho del borde de las barras
                        }]
                      },
                      options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                          y: {
                            beginAtZero: true // Comienza el eje Y en cero
                          }
                        }
                      }
                    });
                  }

                </script>
                <script>
                  const datos2 = JSON.parse('<%- chartData2 %>');
                  const ctx2 = document.getElementById('barChart2').getContext('2d');

                  const fechas = datos2.map(d => d.ano + '-' + (d.mes < 10 ? '0' + d.mes : d.mes));
                  const temperaturas = datos2.map(d => d.temperatura);

                  new Chart(ctx2, {
                    type: 'line',
                    data: {
                      labels: fechas,
                      datasets: [{
                        label: 'Variación ambiente de Temperatura total',
                        data: temperaturas,
                        borderColor: 'blue',
                        fill: false
                      }]
                    },
                    options: {
                      responsive: true,
                      maintainAspectRatio: false,
                      scales: {
                        y: {
                          beginAtZero: true // Comienza el eje Y en cero
                        }
                      }
                    }
                  });
                </script>
                <script>
                  const datos3 = JSON.parse('<%- chartData3 %>');
                  const ctx3 = document.getElementById('barChart3').getContext('2d');

                  const fechas3 = datos3.map(d => d.ano + '-' + (d.mes < 10 ? '0' + d.mes : d.mes));
                  const humedad = datos3.map(d => d.humedad);

                  new Chart(ctx3, {
                    type: 'line',
                    data: {
                      labels: fechas3,
                      datasets: [{
                        label: 'Variación ambiente de Humedad total',
                        data: humedad,
                        borderColor: 'rgb(239, 82, 97)',
                        fill: false
                      }]
                    },
                    options: {
                      responsive: true,
                      maintainAspectRatio: false,
                      scales: {
                        y: {
                          beginAtZero: true // Comienza el eje Y en cero
                        }
                      }
                    }
                  });
                </script>



                <% if(typeof alert !="undefined" ) { %>
                  <script>
                    Swal.fire({
                      title: '<%=alertTitle %>',
                      text: '<%= alertMessage%>',
                      icon: '<%=alertIcon %>',
                      showConfirmButton: '<%= showConfirmButton %>',
                      timer: '<%= timer %>'
                    }).then(() => {
                      window.location = '<%= ruta %>'
                    })
                  </script>
                  <% } %>



                    <script>
                      var x = document.getElementById("myAudio");



                      const socket = io()

                      socket.on('cromfinalizado', (msg) => {
                        toastr.options.positionClass = "toast-bottom-right"
                        toastr.success('Nuevo servicio finalizado' + msg)
                        x.play();

                      })

                    </script>




                    <%- include('./partials/footer.ejs') %>
  </body>

  </html>